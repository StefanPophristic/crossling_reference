incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalEstimates <- getEstimates(incrementalPosteriors)
continuousEstimates <- getEstimates(continuousPosteriors)
continuousPredictionScript <- wrapPrediction(model, continuousEstimates,
"START size color STOP",
"color_size",
"continuous")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalPredictives <- webppl(incrementalPredictionScript, data = df, data_var = "df")
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
d <- collapse_dataset(d_uncollapsed)
View(d)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
View(model)
incrementalContinuousInferenceScript <- wrapInference(model,
"START size color STOP",
"color_size",
"incrementalContinuous")
incrementalContinuousPosteriors <- webppl(incrementalContinuousInferenceScript, data = df, data_var = "df")
graphPosteriors(incrementalContinuousPosteriors) + ggtitle("Incremental-continuous posteriors")
ggsave("results/ctsl_incrementalContinuousPosteriors.png")
incrementalContinuousEstimates <- getEstimates(incrementalContinuousPosteriors)
incrementalContinuousPredictionScript <- wrapPrediction(model,
incrementalContinuousEstimates,
"START size color STOP",
"color_size",
"incrementalContinuous")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalContinuousEstimates <- getEstimates(incrementalContinuousPosteriors)
incrementalContinuousPredictionScript <- wrapPrediction(model,
incrementalContinuousEstimates,
"START size color STOP",
"color_size",
"incrementalContinuous")
incrementalContinuousPredictionScript <- wrapPrediction(model,
incrementalContinuousEstimates,
"START size color STOP",
"color_size",
"incrementalContinuous")
source("~/Desktop/repos/ctsl-rsa/preprocessing.R")
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/Degen2020/bda_data.csv")
d_uncollapsed <- read_csv("../../data/bda_data.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "english")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
View(df)
View(statesUtterances)
statesUtterances$states
statesUtterances$utterances
df$utterances
model <- makeModel("modelAndSemantics.txt")
continuousInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"continuous")
continuousPosteriors <- webppl(continuousInferenceScript, data = df, data_var = "df")
graphPosteriors(continuousPosteriors) + ggtitle("Continuous posteriors")
ggsave("results/ctsl_continuousPosteriors2.png")
continuousInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"continuous")
continuousPosteriors <- webppl(continuousInferenceScript, data = df, data_var = "df")
graphPosteriors(continuousPosteriors) + ggtitle("Continuous posteriors")
ggsave("results/ctsl_continuousPosteriors3.png")
continuousInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"continuous")
continuousPosteriors <- webppl(continuousInferenceScript, data = df, data_var = "df")
graphPosteriors(continuousPosteriors) + ggtitle("Continuous posteriors")
ggsave("results/ctsl_continuousPosteriors4.png")
continuousEstimates <- getEstimates(continuousPosteriors)
continuousPredictionScript <- wrapPrediction(model, continuousEstimates,
"START size color STOP",
"color_size",
"continuous")
continuousPredictives <- webppl(continuousPredictionScript, data = df, data_var = "df")
graphPredictives(continuousPredictives, df) + ggtitle("Continuous predictives")
ggsave("results/ctsl_continuousPredictives2.png", width = 4, height = 3, units = "in")
continuousPredictives <- webppl(continuousPredictionScript, data = df, data_var = "df")
graphPredictives(continuousPredictives, df) + ggtitle("Continuous predictives")
ggsave("results/ctsl_continuousPredictives3.png", width = 4, height = 3, units = "in")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalPosteriors <- webppl(incrementalInferenceScript, data = df, data_var = "df")
graphPosteriors(incrementalPosteriors) + ggtitle("Incremental posteriors")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/Degen2020/bda_data.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "english")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
vanillaInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"vanilla")
vanillaPosteriors <- webppl(vanillaInferenceScript, data = df, data_var = "df")
graphPosteriors(vanillaPosteriors) + ggtitle("Vanilla posteriors")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalPosteriors <- webppl(incrementalInferenceScript, data = df, data_var = "df")
graphPosteriors(incrementalPosteriors) + ggtitle("Incremental posteriors")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/bda_data.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "english")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
vanillaInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"vanilla")
vanillaPosteriors <- webppl(vanillaInferenceScript, data = df, data_var = "df")
graphPosteriors(vanillaPosteriors) + ggtitle("Vanilla posteriors")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalPosteriors <- webppl(incrementalInferenceScript, data = df, data_var = "df")
graphPosteriors(incrementalPosteriors) + ggtitle("Incremental posteriors")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
getwd()
getwd()
source("../../_shared/inferenceHelpers.R")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalPredictives <- webppl(incrementalPredictionScript, data = df, data_var = "df")
graphPredictives(incrementalPredictives, df) + ggtitle("Incremental predictives")
ggsave("results/ctsl_incrementalPredictives.png", width = 4, height = 3, units = "in")
incrementalContinuousInferenceScript <- wrapInference(model,
"START size color STOP",
"color_size",
"incrementalContinuous")
incrementalContinuousPosteriors <- webppl(incrementalContinuousInferenceScript, data = df, data_var = "df")
graphPosteriors(incrementalContinuousPosteriors) + ggtitle("Incremental-continuous posteriors")
ggsave("results/ctsl_incrementalContinuousPosteriors.png")
incrementalContinuousEstimates <- getEstimates(incrementalContinuousPosteriors)
incrementalContinuousPredictionScript <- wrapPrediction(model,
incrementalContinuousEstimates,
"START size color STOP",
"color_size",
"incrementalContinuous")
incrementalContinuousPredictives <- webppl(incrementalContinuousPredictionScript, data = df, data_var = "df")
ggsave("results/ctsl_incrementalContinuousPredictives.png", width = 4, height = 3, units = "in")
save.image("results/ctsl_results.RData")
load("/Users/leylakursat/Desktop/repos/ctsl-rsa/analyses/bda/Results/ctsl_results.RData")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/bda_data.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "english")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
vanillaInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"vanilla")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalPosteriors <- webppl(incrementalInferenceScript, data = df, data_var = "df")
graphPosteriors(incrementalPosteriors) + ggtitle("Incremental posteriors")
ggsave("results/ctsl_incrementalPosteriors2.png")
incrementalPosteriors
View(incrementalPosteriors)
ggsave("results/ctsl_incrementalPosteriors2.png")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalPredictives <- webppl(incrementalPredictionScript, data = df, data_var = "df")
View(incrementalPredictives)
graphPredictives(incrementalPredictives, df) + ggtitle("Incremental predictives")
ggsave("results/ctsl_incrementalPredictives2.png", width = 4, height = 3, units = "in")
incrementalContinuousInferenceScript <- wrapInference(model,
"START size color STOP",
"color_size",
"incrementalContinuous")
incrementalContinuousPosteriors <- webppl(incrementalContinuousInferenceScript, data = df, data_var = "df")
graphPosteriors(incrementalContinuousPosteriors) + ggtitle("Incremental-continuous posteriors")
View(incrementalContinuousPosteriors)
ggsave("results/ctsl_incrementalContinuousPosteriors2.png")
incrementalContinuousEstimates <- getEstimates(incrementalContinuousPosteriors)
incrementalContinuousPredictionScript <- wrapPrediction(model,
incrementalContinuousEstimates,
"START size color STOP",
"color_size",
"incrementalContinuous")
incrementalContinuousPredictives <- webppl(incrementalContinuousPredictionScript, data = df, data_var = "df")
View(incrementalContinuousPredictives)
graphPredictives(incrementalContinuousPredictives, df)
ggsave("results/ctsl_incrementalContinuousPredictives.png", width = 4, height = 3, units = "in")
save.image("results/ctsl_results2.RData")
load("/Users/leylakursat/Desktop/repos/ctsl-rsa/analyses/bda/Results/ctsl_results2.RData")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/bda_data_english.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "english")
d <- collapse_dataset(d_uncollapsed)
d_uncollapsed <- read_csv("../../data/bda_data_english.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "spanish")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
vanillaInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"vanilla")
continuousInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"continuous")
continuousPosteriors <- webppl(continuousInferenceScript, data = df, data_var = "df")
graphPosteriors(continuousPosteriors) + ggtitle("Continuous posteriors")
ggsave("results/eng_continuousPosteriors5.png")
continuousInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"continuous")
continuousPosteriors <- webppl(continuousInferenceScript, data = df, data_var = "df")
graphPosteriors(continuousPosteriors) + ggtitle("Continuous posteriors")
ggsave("results/eng_continuousPosteriors6.png")
ggsave("results/eng_continuousPredictives6.png", width = 4, height = 3, units = "in")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalPosteriors <- webppl(incrementalInferenceScript, data = df, data_var = "df")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalPosteriors <- webppl(incrementalInferenceScript, data = df, data_var = "df")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/bda_data_english.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "spanish")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalPosteriors <- webppl(incrementalInferenceScript, data = df, data_var = "df")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/bda_data_english.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "english")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalPosteriors <- webppl(incrementalInferenceScript, data = df, data_var = "df")
graphPosteriors(incrementalPosteriors) + ggtitle("Incremental posteriors")
ggsave("results/eng_incrementalPosteriors2.png")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalPredictives <- webppl(incrementalPredictionScript, data = df, data_var = "df")
graphPredictives(incrementalPredictives, df) + ggtitle("Incremental predictives")
ggsave("results/eng_incrementalPredictives2.png", width = 4, height = 3, units = "in")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/bda_data_english.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "english")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
vanillaInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"vanilla")
vanillaPosteriors <- webppl(vanillaInferenceScript, data = df, data_var = "df")
graphPosteriors(vanillaPosteriors) + ggtitle("Vanilla posteriors")
ggsave("results/eng_vanillaPosteriors.png")
ggsave("results/eng_vanillaPosteriors2.png")
vanillaEstimates <- getEstimates(vanillaPosteriors)
vanillaPredictionScript <- wrapPrediction(model, vanillaEstimates,
"START size color STOP",
"color_size",
"vanilla")
vanillaPredictives <- webppl(vanillaPredictionScript, data = df, data_var = "df")
graphPredictives(vanillaPredictives, df)
ggsave("results/eng_vanillaPredictives2.png", width = 4, height = 3, units = "in")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/bda_data_english.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "english")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
vanillaInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"vanilla")
vanillaPosteriors <- webppl(vanillaInferenceScript, data = df, data_var = "df")
graphPosteriors(vanillaPosteriors) + ggtitle("Vanilla posteriors")
ggsave("results/eng_vanillaPosteriors2.png")
ggsave("results/eng_vanillaPosteriors.png")
vanillaEstimates <- getEstimates(vanillaPosteriors)
vanillaPredictionScript <- wrapPrediction(model, vanillaEstimates,
"START size color STOP",
"color_size",
"vanilla")
vanillaPredictives <- webppl(vanillaPredictionScript, data = df, data_var = "df")
ggsave("results/eng_vanillaPredictives.png", width = 4, height = 3, units = "in")
continuousInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"continuous")
continuousPosteriors <- webppl(continuousInferenceScript, data = df, data_var = "df")
continuousInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"continuous")
continuousPosteriors <- webppl(continuousInferenceScript, data = df, data_var = "df")
graphPosteriors(continuousPosteriors) + ggtitle("Continuous posteriors")
ggsave("results/eng_continuousPosteriors.png")
continuousEstimates <- getEstimates(continuousPosteriors)
continuousPredictionScript <- wrapPrediction(model, continuousEstimates,
"START size color STOP",
"color_size",
"continuous")
continuousPredictives <- webppl(continuousPredictionScript, data = df, data_var = "df")
graphPredictives(continuousPredictives, df) + ggtitle("Continuous predictives")
graphPredictives(continuousPredictives, df) + ggtitle("Continuous predictives")
graphPosteriors(continuousPosteriors) + ggtitle("Continuous posteriors")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalPosteriors <- webppl(incrementalInferenceScript, data = df, data_var = "df")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../../_shared/inferenceHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/bda_data_english.csv")
statesUtterances <- makeStatesUtterances(d_uncollapsed, "english")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
vanillaInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"vanilla")
vanillaPosteriors <- webppl(vanillaInferenceScript, data = df, data_var = "df")
graphPosteriors(vanillaPosteriors) + ggtitle("Vanilla posteriors")
ggsave("results/eng_vanillaPosteriors.png")
vanillaEstimates <- getEstimates(vanillaPosteriors)
vanillaPredictionScript <- wrapPrediction(model, vanillaEstimates,
"START size color STOP",
"color_size",
"vanilla")
vanillaPredictives <- webppl(vanillaPredictionScript, data = df, data_var = "df")
graphPredictives(vanillaPredictives, df)
ggsave("results/eng_vanillaPredictives.png", width = 4, height = 3, units = "in")
continuousInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"continuous")
continuousPosteriors <- webppl(continuousInferenceScript, data = df, data_var = "df")
graphPosteriors(continuousPosteriors) + ggtitle("Continuous posteriors")
ggsave("results/eng_continuousPosteriors.png")
continuousEstimates <- getEstimates(continuousPosteriors)
continuousPredictionScript <- wrapPrediction(model, continuousEstimates,
"START size color STOP",
"color_size",
"continuous")
continuousPredictives <- webppl(continuousPredictionScript, data = df, data_var = "df")
graphPredictives(continuousPredictives, df) + ggtitle("Continuous predictives")
ggsave("results/eng_continuousPredictives.png", width = 4, height = 3, units = "in")
incrementalInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"incremental")
incrementalPosteriors <- webppl(incrementalInferenceScript, data = df, data_var = "df")
graphPosteriors(incrementalPosteriors) + ggtitle("Incremental posteriors")
ggsave("results/eng_incrementalPosteriors.png")
incrementalEstimates <- getEstimates(incrementalPosteriors)
incrementalPredictionScript <- wrapPrediction(model, incrementalEstimates,
"START size color STOP",
"color_size",
"incremental")
incrementalPredictives <- webppl(incrementalPredictionScript, data = df, data_var = "df")
graphPredictives(incrementalPredictives, df) + ggtitle("Incremental predictives")
ggsave("results/eng_incrementalPredictives.png", width = 4, height = 3, units = "in")
incrementalContinuousInferenceScript <- wrapInference(model,
"START size color STOP",
"color_size",
"incrementalContinuous")
incrementalContinuousPosteriors <- webppl(incrementalContinuousInferenceScript, data = df, data_var = "df")
graphPosteriors(incrementalContinuousPosteriors) + ggtitle("Incremental-continuous posteriors")
ggsave("results/eng_incrementalContinuousPosteriors.png")
incrementalContinuousEstimates <- getEstimates(incrementalContinuousPosteriors)
incrementalContinuousPredictionScript <- wrapPrediction(model,
incrementalContinuousEstimates,
"START size color STOP",
"color_size",
"incrementalContinuous")
incrementalContinuousPredictives <- webppl(incrementalContinuousPredictionScript, data = df, data_var = "df")
graphPredictives(incrementalContinuousPredictives, df)
ggsave("results/eng_incrementalContinuousPredictives.png", width = 4, height = 3, units = "in")
save.image("results/eng_results.RData")
