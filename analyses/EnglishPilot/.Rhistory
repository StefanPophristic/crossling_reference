for(object in c("trafficcone", "speaker", "skateboard",
"rollerskates", "pogostick", "pedalpub",
"motorcycle", "forklift", "fireworks",
"car", "bonfire", "bike")) {
vehicleGraphs[[index]] <- graphFunc(d, "vehicles", object)
index = index + 1
}
do.call("grid.arrange", c(vehicleGraphs, nrow = 3))
index = 1
petGraphs = list()
for(object in c("snake", "scorpion", "pollen",
"pitbull", "hairlesscat", "greatdane",
"goldfish", "gascan", "chinchilla",
"chihuahua", "boombox", "backpack")) {
petGraphs[[index]] <- graphFunc(d, "pets", object)
index = index + 1
}
do.call("grid.arrange", c(petGraphs, nrow = 3))
con <- mongo("rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
d <- data.frame(con$aggregate()) %>%
mutate(index = row_number()) %>%
filter(createdAt > '2021-04-14 07:00:00')
con$disconnect()
rm(con)
con <- mongo("player_rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
playerInfo <- data.frame(con$aggregate())
con$disconnect()
rm(con)
excludeGames <- unique((playerInfo %>% filter(!(data$attnCheckSelections %in% c("forklift", "goldfish"))))$gameId)
d <- d %>%
filter(!(gameId %in% excludeGames))
getChat <- function(i) {
df <- data.frame(d$data$chatLog[[i]]$player$name, d$data$chatLog[[i]]$text)
colnames(df) <- c("player","text")
return(df)
}
getRoundData <- function(i) {
return(c(d$data$name[[i]], d$data$goal$id[[i]], d$data$selections[[i]] ))
}
getChat(10)
getRoundData(10)
graphFunc <- function(d, condition, object) {
temp <- d
temp$choseObject = 0
for(i in seq(nrow(d))) {
if(object %in% d$data$selections[i][[1]]) {
temp[i,]$choseObject <- 1
}
}
temp <- temp %>% filter(data$name == condition) %>%
mutate(goal = data$goal$id) %>%
group_by(goal) %>%
summarize(proportionSelect = sum(choseObject) / n())
g <- ggplot(temp, aes(x = goal, y = proportionSelect, fill = goal)) +
theme_bw() +
geom_bar(stat = "identity") +
ggtitle(object) +
ylab(element_blank()) +
xlab(element_blank()) +
ylim(0,1) +
theme(legend.position = "none")
return(g)
}
index = 1
vehicleGraphs = list()
for(object in c("trafficcone", "speaker", "skateboard",
"rollerskates", "pogostick", "pedalpub",
"motorcycle", "forklift", "fireworks",
"car", "bonfire", "bike")) {
vehicleGraphs[[index]] <- graphFunc(d, "vehicles", object)
index = index + 1
}
do.call("grid.arrange", c(vehicleGraphs, nrow = 3))
index = 1
petGraphs = list()
for(object in c("snake", "scorpion", "pollen",
"pitbull", "hairlesscat", "greatdane",
"goldfish", "gascan", "chinchilla",
"chihuahua", "boombox", "backpack")) {
petGraphs[[index]] <- graphFunc(d, "pets", object)
index = index + 1
}
do.call("grid.arrange", c(petGraphs, nrow = 3))
con <- mongo("rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
d <- data.frame(con$aggregate()) %>%
mutate(index = row_number()) %>%
filter(createdAt > '2021-04-14 07:00:00')
con$disconnect()
rm(con)
con <- mongo("player_rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
playerInfo <- data.frame(con$aggregate())
con$disconnect()
rm(con)
excludeGames <- unique((playerInfo %>% filter(!(data$attnCheckSelections %in% c("forklift", "goldfish"))))$gameId)
d <- d %>%
filter(!(gameId %in% excludeGames))
getChat <- function(i) {
df <- data.frame(d$data$chatLog[[i]]$player$name, d$data$chatLog[[i]]$text)
colnames(df) <- c("player","text")
return(df)
}
getRoundData <- function(i) {
return(c(d$data$name[[i]], d$data$goal$id[[i]], d$data$selections[[i]] ))
}
getChat(10)
getRoundData(10)
graphFunc <- function(d, condition, object) {
temp <- d
temp$choseObject = 0
for(i in seq(nrow(d))) {
if(object %in% d$data$selections[i][[1]]) {
temp[i,]$choseObject <- 1
}
}
temp <- temp %>% filter(data$name == condition) %>%
mutate(goal = data$goal$id) %>%
group_by(goal) %>%
summarize(proportionSelect = sum(choseObject) / n())
g <- ggplot(temp, aes(x = goal, y = proportionSelect, fill = goal)) +
theme_bw() +
geom_bar(stat = "identity") +
ggtitle(object) +
ylab(element_blank()) +
xlab(element_blank()) +
ylim(0,1) +
theme(legend.position = "none")
return(g)
}
index = 1
vehicleGraphs = list()
for(object in c("trafficcone", "speaker", "skateboard",
"rollerskates", "pogostick", "pedalpub",
"motorcycle", "forklift", "fireworks",
"car", "bonfire", "bike")) {
vehicleGraphs[[index]] <- graphFunc(d, "vehicles", object)
index = index + 1
}
do.call("grid.arrange", c(vehicleGraphs, nrow = 3))
con <- mongo("rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
d <- data.frame(con$aggregate()) %>%
mutate(index = row_number()) %>%
filter(createdAt > '2021-04-14 07:00:00')
con$disconnect()
rm(con)
con <- mongo("player_rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
playerInfo <- data.frame(con$aggregate())
con$disconnect()
rm(con)
excludeGames <- unique((playerInfo %>% filter(!(data$attnCheckSelections %in% c("forklift", "goldfish"))))$gameId)
d <- d %>%
filter(!(gameId %in% excludeGames))
getChat <- function(i) {
df <- data.frame(d$data$chatLog[[i]]$player$name, d$data$chatLog[[i]]$text)
colnames(df) <- c("player","text")
return(df)
}
getRoundData <- function(i) {
return(c(d$data$name[[i]], d$data$goal$id[[i]], d$data$selections[[i]] ))
}
getChat(10)
getRoundData(10)
graphFunc <- function(d, condition, object) {
temp <- d
temp$choseObject = 0
for(i in seq(nrow(d))) {
if(object %in% d$data$selections[i][[1]]) {
temp[i,]$choseObject <- 1
}
}
temp <- temp %>% filter(data$name == condition) %>%
mutate(goal = data$goal$id) %>%
group_by(goal) %>%
summarize(proportionSelect = sum(choseObject) / n())
g <- ggplot(temp, aes(x = goal, y = proportionSelect, fill = goal)) +
theme_bw() +
geom_bar(stat = "identity") +
ggtitle(object) +
ylab(element_blank()) +
xlab(element_blank()) +
ylim(0,1) +
theme(legend.position = "none")
return(g)
}
index = 1
vehicleGraphs = list()
for(object in c("trafficcone", "speaker", "skateboard",
"rollerskates", "pogostick", "pedalpub",
"motorcycle", "forklift", "fireworks",
"car", "bonfire", "bike")) {
vehicleGraphs[[index]] <- graphFunc(d, "vehicles", object)
index = index + 1
}
do.call("grid.arrange", c(vehicleGraphs, nrow = 3))
con <- mongo("rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
d <- data.frame(con$aggregate()) %>%
mutate(index = row_number()) %>%
filter(createdAt > '2021-04-14 07:00:00')
con$disconnect()
rm(con)
con <- mongo("player_rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
playerInfo <- data.frame(con$aggregate())
con$disconnect()
rm(con)
excludeGames <- unique((playerInfo %>% filter(!(data$attnCheckSelections %in% c("forklift", "goldfish"))))$gameId)
d <- d %>%
filter(!(gameId %in% excludeGames))
getChat <- function(i) {
df <- data.frame(d$data$chatLog[[i]]$player$name, d$data$chatLog[[i]]$text)
colnames(df) <- c("player","text")
return(df)
}
getRoundData <- function(i) {
return(c(d$data$name[[i]], d$data$goal$id[[i]], d$data$selections[[i]] ))
}
getChat(10)
getRoundData(10)
graphFunc <- function(d, condition, object) {
temp <- d
temp$choseObject = 0
for(i in seq(nrow(d))) {
if(object %in% d$data$selections[i][[1]]) {
temp[i,]$choseObject <- 1
}
}
temp <- temp %>% filter(data$name == condition) %>%
mutate(goal = data$goal$id) %>%
group_by(goal) %>%
summarize(proportionSelect = sum(choseObject) / n())
g <- ggplot(temp, aes(x = goal, y = proportionSelect, fill = goal)) +
theme_bw() +
geom_bar(stat = "identity") +
ggtitle(object) +
ylab(element_blank()) +
xlab(element_blank()) +
ylim(0,1) +
theme(legend.position = "none")
return(g)
}
index = 1
vehicleGraphs = list()
for(object in c("trafficcone", "speaker", "skateboard",
"rollerskates", "pogostick", "pedalpub",
"motorcycle", "forklift", "fireworks",
"car", "bonfire", "bike")) {
vehicleGraphs[[index]] <- graphFunc(d, "vehicles", object)
index = index + 1
}
do.call("grid.arrange", c(vehicleGraphs, nrow = 3))
index = 1
petGraphs = list()
for(object in c("snake", "scorpion", "pollen",
"pitbull", "hairlesscat", "greatdane",
"goldfish", "gascan", "chinchilla",
"chihuahua", "boombox", "backpack")) {
petGraphs[[index]] <- graphFunc(d, "pets", object)
index = index + 1
}
do.call("grid.arrange", c(petGraphs, nrow = 3))
getChat <- function(i) {
df <- data.frame(d$data$chatLog[[i]]$player$name, d$data$chatLog[[i]]$text)
colnames(df) <- c("player","text")
return(df)
}
getRoundData <- function(i) {
return(c(d$data$name[[i]], d$data$goal$id[[i]], d$data$selections[[i]] ))
}
getChat(10)
getRoundData(10)
graphFunc <- function(d, condition, object) {
temp <- d
temp$choseObject = 0
for(i in seq(nrow(d))) {
if(object %in% d$data$selections[i][[1]]) {
temp[i,]$choseObject <- 1
}
}
temp <- temp %>% filter(data$name == condition) %>%
mutate(goal = data$goal$id) %>%
group_by(goal) %>%
summarize(proportionSelect = sum(choseObject) / n())
g <- ggplot(temp, aes(x = goal, y = proportionSelect, fill = goal)) +
theme_bw() +
geom_bar(stat = "identity") +
ggtitle(object) +
ylab(element_blank()) +
xlab(element_blank()) +
ylim(0,1) +
theme(legend.position = "none")
return(g)
}
index = 1
vehicleGraphs = list()
for(object in c("trafficcone", "speaker", "skateboard",
"rollerskates", "pogostick", "pedalpub",
"motorcycle", "forklift", "fireworks",
"car", "bonfire", "bike")) {
vehicleGraphs[[index]] <- graphFunc(d, "vehicles", object)
index = index + 1
}
do.call("grid.arrange", c(vehicleGraphs, nrow = 3))
con <- mongo("rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
d <- data.frame(con$aggregate()) %>%
mutate(index = row_number()) %>%
filter(createdAt > '2021-04-14 07:00:00')
con$disconnect()
rm(con)
con <- mongo("player_rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
playerInfo <- data.frame(con$aggregate())
con$disconnect()
rm(con)
excludeGames <- unique((playerInfo %>% filter(!(data$attnCheckSelections %in% c("forklift", "goldfish"))))$gameId)
d <- d %>%
filter(!(gameId %in% excludeGames))
getChat <- function(i) {
df <- data.frame(d$data$chatLog[[i]]$player$name, d$data$chatLog[[i]]$text)
colnames(df) <- c("player","text")
return(df)
}
getRoundData <- function(i) {
return(c(d$data$name[[i]], d$data$goal$id[[i]], d$data$selections[[i]] ))
}
getChat(10)
getRoundData(10)
graphFunc <- function(d, condition, object) {
temp <- d
temp$choseObject = 0
for(i in seq(nrow(d))) {
if(object %in% d$data$selections[i][[1]]) {
temp[i,]$choseObject <- 1
}
}
temp <- temp %>% filter(data$name == condition) %>%
mutate(goal = data$goal$id) %>%
group_by(goal) %>%
summarize(proportionSelect = sum(choseObject) / n())
g <- ggplot(temp, aes(x = goal, y = proportionSelect, fill = goal)) +
theme_bw() +
geom_bar(stat = "identity") +
ggtitle(object) +
ylab(element_blank()) +
xlab(element_blank()) +
ylim(0,1) +
theme(legend.position = "none")
return(g)
}
index = 1
vehicleGraphs = list()
for(object in c("trafficcone", "speaker", "skateboard",
"rollerskates", "pogostick", "pedalpub",
"motorcycle", "forklift", "fireworks",
"car", "bonfire", "bike")) {
vehicleGraphs[[index]] <- graphFunc(d, "vehicles", object)
index = index + 1
}
do.call("grid.arrange", c(vehicleGraphs, nrow = 3))
index = 1
con <- mongo("rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
d <- data.frame(con$aggregate()) %>%
mutate(index = row_number()) %>%
filter(createdAt > '2021-04-14 07:00:00')
con$disconnect()
rm(con)
con <- mongo("player_rounds", url = "mongodb+srv://brandon:alpslab@cluster0.xizoq.mongodb.net/jp-data")
playerInfo <- data.frame(con$aggregate())
con$disconnect()
rm(con)
excludeGames <- unique((playerInfo %>% filter(!(data$attnCheckSelections %in% c("forklift", "goldfish"))))$gameId)
d <- d %>%
filter(!(gameId %in% excludeGames))
getChat <- function(i) {
df <- data.frame(d$data$chatLog[[i]]$player$name, d$data$chatLog[[i]]$text)
colnames(df) <- c("player","text")
return(df)
}
getRoundData <- function(i) {
return(c(d$data$name[[i]], d$data$goal$id[[i]], d$data$selections[[i]] ))
}
getChat(10)
getRoundData(10)
graphFunc <- function(d, condition, object) {
temp <- d
temp$choseObject = 0
for(i in seq(nrow(d))) {
if(object %in% d$data$selections[i][[1]]) {
temp[i,]$choseObject <- 1
}
}
temp <- temp %>% filter(data$name == condition) %>%
mutate(goal = data$goal$id) %>%
group_by(goal) %>%
summarize(proportionSelect = sum(choseObject) / n())
g <- ggplot(temp, aes(x = goal, y = proportionSelect, fill = goal)) +
theme_bw() +
geom_bar(stat = "identity") +
ggtitle(object) +
ylab(element_blank()) +
xlab(element_blank()) +
ylim(0,1) +
theme(legend.position = "none")
return(g)
}
index = 1
vehicleGraphs = list()
for(object in c("trafficcone", "speaker", "skateboard",
"rollerskates", "pogostick", "pedalpub",
"motorcycle", "forklift", "fireworks",
"car", "bonfire", "bike")) {
vehicleGraphs[[index]] <- graphFunc(d, "vehicles", object)
index = index + 1
}
do.call("grid.arrange", c(vehicleGraphs, nrow = 3))
d %>% group_by(data$goal$id)
d %>% group_by(data$name, data$goal$id) %>% summarize(n = n())
getChat(10)
getRoundData(10)
getChat(5)
getRoundData(5)
getChat(11)
getRoundData(11)
getChat(13)
getRoundData(13)
getChat(14)
getRoundData(14)
getChat(15)
getRoundData(15)
getChat(15)
getChat(16)
getRoundData(16)
getChat(17)
getRoundData(17)
getChat(18)
getRoundData(18)
getChat(19)
getRoundData(19)
getChat(20)
getRoundData(20)
getChat(21)
getRoundData(21)
getChat(22)
getRoundData(22)
getChat(23)
getRoundData(23)
getChat(24)
getRoundData(24)
getChat(25)
getRoundData(25)
getChat(26)
getRoundData(26)
getChat(27)
getRoundData(27)
getChat(31)
getRoundData(31)
getChat(32)
getRoundData(32)
getChat(33)
getRoundData(33)
getChat(34)
getRoundData(34)
getChat(35)
getRoundData(35)
getChat(36)
getRoundData(36)
getChat(40)
getRoundData(40)
getChat(41)
42
getChat(42)
getRoundData(42)
getChat(45)
getRoundData(45)
getChat(48)
getRoundData(48)
getChat(52)
getRoundData(52)
getChat(56)
getRoundData(56)
getChat(60)
getRoundData(60)
index = 1
petGraphs = list()
for(object in c("snake", "scorpion", "pollen",
"pitbull", "hairlesscat", "greatdane",
"goldfish", "gascan", "chinchilla",
"chihuahua", "boombox", "backpack")) {
petGraphs[[index]] <- graphFunc(d, "pets", object)
index = index + 1
}
do.call("grid.arrange", c(petGraphs, nrow = 3))
do.call("grid.arrange", c(vehicleGraphs, nrow = 3))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(jsonlite)
library(rwebppl)
source("../_shared/BDA_dataprep.R")
source("../_shared/wpplHelpers.R")
source("../_shared/BDA_vizhelpers.R")
d_uncollapsed <- read_csv("../../data/EnglishPilot/bda_data.csv") %>%
rename(response = redBDAUtterance)
statesUtterances <- makeStatesUtterances(d_uncollapsed, "english")
d <- collapse_dataset(d_uncollapsed)
df <- merge(d, statesUtterances, by = "condition")
model <- makeModel("modelAndSemantics.txt")
vanillaInferenceScript <- wrapInference(model, "START size color STOP",
"color_size",
"vanilla")
vanillaPosteriors <- webppl(vanillaInferenceScript, data = df, data_var = "df")
graphPosteriors(vanillaPosteriors) + ggtitle("Vanilla posteriors")
View(vanillaPosteriors)
View(vanillaPosteriors)
View(vanillaInferenceScript)
View(vanillaPosteriors)
rm(list = ls())
