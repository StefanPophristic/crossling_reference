ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
graphScenarioNoise1 <- scenario %>%
filter(scenario$genderNoise == 1.0 |
scenario$commandType == "globalBool" |
scenario$commandType == "incBool") %>%
mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
# EXPORT THE SCENARIO 1 PLOTS
contModelName <- paste("stefanTestSeries1/scenario", scenarioNum, "_ContModels.jpeg", sep = "")
graph2Name <- paste("stefanTestSeries1/scenario", scenarioNum, "_Noise08.jpeg", sep = "")
graph3Name <-paste("stefanTestSeries1/scenario", scenarioNum, "_Noise1.jpeg", sep = "")
#Export the plots
jpeg(file=contModelName, width = 1500, height = 1000)
plot(graphScenarioCont)
dev.off()
jpeg(file=graph2Name, width = 1500, height = 1000)
plot(graphScenarioNoise08)
dev.off()
jpeg(file=graph3Name, width = 1500, height = 1000)
plot(graphScenarioNoise1)
dev.off()
}
graphDF <- data.frame(
scenarios = unique(scenariosFinal$states)
)
graphDF <- graphDF %>%
add_column(target = rep("blue_plate_masc", nrow(graphDF))) %>%
add_column(trialNum = 1:nrow(graphDF))
sapply(graphDF, graphScenario)
graphScenario <- function(inputDF) {
print(inputDF[1])
print(inputDF[2])
print(inputDF[3])
statesInput = inputDF[1]
targetInput = inputDF[2]
scenarioNum = inputDF[3]
# Get the correct Scenario
scenario <- scenariosFinal %>%
filter(target == targetInput & states == statesInput)
# Scenario 1; all continous graphs; cost = 0
graphScenarioCont <-  scenario %>%
filter(scenario$commandType == "globalCont" |
scenario$commandType == "incCont")%>%
group_by(commandType, genderNoise) %>%
mutate(identifier = paste(commandType, ", cost: ", sizeCost, ", genderNoise: ", genderNoise, sep = "")) %>%
ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
# Scenario 1; Graphs by genderNoise and sizeCost
graphScenarioNoise08 <- scenario %>%
filter(scenario$genderNoise == 0.8 |
scenario$commandType == "globalBool" |
scenario$commandType == "incBool") %>%
mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
graphScenarioNoise1 <- scenario %>%
filter(scenario$genderNoise == 1.0 |
scenario$commandType == "globalBool" |
scenario$commandType == "incBool") %>%
mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
# EXPORT THE SCENARIO 1 PLOTS
contModelName <- paste("stefanTestSeries1/scenario", scenarioNum, "_ContModels.jpeg", sep = "")
graph2Name <- paste("stefanTestSeries1/scenario", scenarioNum, "_Noise08.jpeg", sep = "")
graph3Name <-paste("stefanTestSeries1/scenario", scenarioNum, "_Noise1.jpeg", sep = "")
#Export the plots
jpeg(file=contModelName, width = 1500, height = 1000)
plot(graphScenarioCont)
dev.off()
jpeg(file=graph2Name, width = 1500, height = 1000)
plot(graphScenarioNoise08)
dev.off()
jpeg(file=graph3Name, width = 1500, height = 1000)
plot(graphScenarioNoise1)
dev.off()
}
graphDF <- data.frame(
scenarios = unique(scenariosFinal$states)
)
graphDF <- graphDF %>%
add_column(target = rep("blue_plate_masc", nrow(graphDF))) %>%
add_column(trialNum = 1:nrow(graphDF))
sapply(graphDF, graphScenario)
library(tidyverse)
library(grid)
library(gridExtra)
library(viridis)
library(jsonlite)
library('varhandle')
# Set working directory = R code knows where to get relevant documents
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# RUN WEBPPL FROM A V8 JS ENGINE (FASTER WHEN YOU NEED TO RUN MANY, MANY CALLS TO WEBPPL)
source("../../_shared/V8wppl.R")
# Load all the functions found in stefanSimulationHelpers.R
#   This contains the runModel function that interacts with the V8 engine
#   and runs the code in Webppl online
source("stefanSimulationHelpers.R")
# Source the engine
# Engine = basic RSA model in webppl code (all the speaker and listener functions)
engine <- read_file("../../_shared/engine.txt")
# Load all the extra semantic functions that are required for the main Serbo-Croatian
#   semantics function to run, but that are not found in the csv file created by stefanAllScenarios.py
semanticHelperFunctions <- read_file("stefanModels/stefanSemanticHelperFunctions.txt")
#######
# In case you've already run the above code, and just want to analyze the data, without rerunning
# the code, import the csv file that was written above with the following two lines of code
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
scenariosFinal <- read.csv("stefanTestSeries1/series1Formatted.csv", as.is = TRUE)
graphScenario <- function(inputDF) {
print(inputDF[1])
print(inputDF[2])
print(inputDF[3])
statesInput = inputDF[1]
targetInput = inputDF[2]
scenarioNum = inputDF[3]
# Get the correct Scenario
scenario <- scenariosFinal %>%
filter(target == targetInput & states == statesInput)
# Scenario 1; all continous graphs; cost = 0
graphScenarioCont <-  scenario %>%
filter(scenario$commandType == "globalCont" |
scenario$commandType == "incCont")%>%
group_by(commandType, genderNoise) %>%
mutate(identifier = paste(commandType, ", cost: ", sizeCost, ", genderNoise: ", genderNoise, sep = "")) %>%
ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
# Scenario 1; Graphs by genderNoise and sizeCost
graphScenarioNoise08 <- scenario %>%
filter(scenario$genderNoise == 0.8 |
scenario$commandType == "globalBool" |
scenario$commandType == "incBool") %>%
mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
graphScenarioNoise1 <- scenario %>%
filter(scenario$genderNoise == 1.0 |
scenario$commandType == "globalBool" |
scenario$commandType == "incBool") %>%
mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
# EXPORT THE SCENARIO 1 PLOTS
contModelName <- paste("stefanTestSeries1/scenario", scenarioNum, "_ContModels.jpeg", sep = "")
graph2Name <- paste("stefanTestSeries1/scenario", scenarioNum, "_Noise08.jpeg", sep = "")
graph3Name <-paste("stefanTestSeries1/scenario", scenarioNum, "_Noise1.jpeg", sep = "")
#Export the plots
jpeg(file=contModelName, width = 1500, height = 1000)
plot(graphScenarioCont)
dev.off()
jpeg(file=graph2Name, width = 1500, height = 1000)
plot(graphScenarioNoise08)
dev.off()
jpeg(file=graph3Name, width = 1500, height = 1000)
plot(graphScenarioNoise1)
dev.off()
}
graphDF <- data.frame(
scenarios = unique(scenariosFinal$states)
)
graphDF <- graphDF %>%
add_column(target = rep("blue_plate_masc", nrow(graphDF))) %>%
add_column(trialNum = 1:nrow(graphDF))
view(graphDF)
graphScenario <- function(inputDF) {
print(inputDF[1])
print(inputDF[2])
print(inputDF[3])
# statesInput = inputDF[1]
# targetInput = inputDF[2]
# scenarioNum = inputDF[3]
#
#   # Get the correct Scenario
# scenario <- scenariosFinal %>%
#   filter(target == targetInput & states == statesInput)
#
# # Scenario 1; all continous graphs; cost = 0
# graphScenarioCont <-  scenario %>%
#   filter(scenario$commandType == "globalCont" |
#            scenario$commandType == "incCont")%>%
#   group_by(commandType, genderNoise) %>%
#   mutate(identifier = paste(commandType, ", cost: ", sizeCost, ", genderNoise: ", genderNoise, sep = "")) %>%
#   ggplot(aes(x=utterance,y=output)) +
#   geom_bar(stat="identity") +
#   facet_wrap(~identifier, ncol = 4) +
#   theme_bw() +
#   theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
#
#
# # Scenario 1; Graphs by genderNoise and sizeCost
# graphScenarioNoise08 <- scenario %>%
#   filter(scenario$genderNoise == 0.8 |
#            scenario$commandType == "globalBool" |
#            scenario$commandType == "incBool") %>%
#   mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
#   ggplot(aes(x=utterance,y=output)) +
#   geom_bar(stat="identity") +
#   facet_wrap(~identifier, ncol = 4) +
#   theme_bw() +
#   theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
#
# graphScenarioNoise1 <- scenario %>%
#   filter(scenario$genderNoise == 1.0 |
#            scenario$commandType == "globalBool" |
#            scenario$commandType == "incBool") %>%
#   mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
#   ggplot(aes(x=utterance,y=output)) +
#   geom_bar(stat="identity") +
#   facet_wrap(~identifier, ncol = 4) +
#   theme_bw() +
#   theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
#
#
# # EXPORT THE SCENARIO 1 PLOTS
#
# contModelName <- paste("stefanTestSeries1/scenario", scenarioNum, "_ContModels.jpeg", sep = "")
# graph2Name <- paste("stefanTestSeries1/scenario", scenarioNum, "_Noise08.jpeg", sep = "")
# graph3Name <-paste("stefanTestSeries1/scenario", scenarioNum, "_Noise1.jpeg", sep = "")
#
# #Export the plots
# jpeg(file=contModelName, width = 1500, height = 1000)
# plot(graphScenarioCont)
# dev.off()
#
# jpeg(file=graph2Name, width = 1500, height = 1000)
# plot(graphScenarioNoise08)
# dev.off()
#
# jpeg(file=graph3Name, width = 1500, height = 1000)
# plot(graphScenarioNoise1)
# dev.off()
}
graphDF <- data.frame(
scenarios = unique(scenariosFinal$states)
)
graphDF <- graphDF %>%
add_column(target = rep("blue_plate_masc", nrow(graphDF))) %>%
add_column(trialNum = 1:nrow(graphDF))
graphDF %>%
mutate(output = sapply(
split(graphDF, 1:nrow(graphDF)),
function(x) do.call(runModelWrapper, x)
))
graphDF %>%
mutate(output = sapply(
split(graphDF, 1:nrow(graphDF)),
function(x) do.call(graphScenario(), x)
))
graphScenario <- function(statesInput, targetInput, scenarioNum) {
print(statesInput)
print(targetInput)
print(scenarioNum)
# print(inputDF[1])
# print(inputDF[2])
# print(inputDF[3])
# statesInput = inputDF[1]
# targetInput = inputDF[2]
# scenarioNum = inputDF[3]
#
#   # Get the correct Scenario
# scenario <- scenariosFinal %>%
#   filter(target == targetInput & states == statesInput)
#
# # Scenario 1; all continous graphs; cost = 0
# graphScenarioCont <-  scenario %>%
#   filter(scenario$commandType == "globalCont" |
#            scenario$commandType == "incCont")%>%
#   group_by(commandType, genderNoise) %>%
#   mutate(identifier = paste(commandType, ", cost: ", sizeCost, ", genderNoise: ", genderNoise, sep = "")) %>%
#   ggplot(aes(x=utterance,y=output)) +
#   geom_bar(stat="identity") +
#   facet_wrap(~identifier, ncol = 4) +
#   theme_bw() +
#   theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
#
#
# # Scenario 1; Graphs by genderNoise and sizeCost
# graphScenarioNoise08 <- scenario %>%
#   filter(scenario$genderNoise == 0.8 |
#            scenario$commandType == "globalBool" |
#            scenario$commandType == "incBool") %>%
#   mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
#   ggplot(aes(x=utterance,y=output)) +
#   geom_bar(stat="identity") +
#   facet_wrap(~identifier, ncol = 4) +
#   theme_bw() +
#   theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
#
# graphScenarioNoise1 <- scenario %>%
#   filter(scenario$genderNoise == 1.0 |
#            scenario$commandType == "globalBool" |
#            scenario$commandType == "incBool") %>%
#   mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
#   ggplot(aes(x=utterance,y=output)) +
#   geom_bar(stat="identity") +
#   facet_wrap(~identifier, ncol = 4) +
#   theme_bw() +
#   theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
#
#
# # EXPORT THE SCENARIO 1 PLOTS
#
# contModelName <- paste("stefanTestSeries1/scenario", scenarioNum, "_ContModels.jpeg", sep = "")
# graph2Name <- paste("stefanTestSeries1/scenario", scenarioNum, "_Noise08.jpeg", sep = "")
# graph3Name <-paste("stefanTestSeries1/scenario", scenarioNum, "_Noise1.jpeg", sep = "")
#
# #Export the plots
# jpeg(file=contModelName, width = 1500, height = 1000)
# plot(graphScenarioCont)
# dev.off()
#
# jpeg(file=graph2Name, width = 1500, height = 1000)
# plot(graphScenarioNoise08)
# dev.off()
#
# jpeg(file=graph3Name, width = 1500, height = 1000)
# plot(graphScenarioNoise1)
# dev.off()
}
graphDF <- data.frame(
scenarios = unique(scenariosFinal$states)
)
graphDF <- graphDF %>%
add_column(target = rep("blue_plate_masc", nrow(graphDF))) %>%
add_column(trialNum = 1:nrow(graphDF))
graphDF %>%
mutate(output = sapply(
split(graphDF, 1:nrow(graphDF)),
function(x) do.call(graphScenario(), x)
))
Map(graphScenario, graphDF$scenarios, graphDF$target, graphDF$trialNum)
Map(graphScenario(), graphDF$scenarios, graphDF$target, graphDF$trialNum)
mapply(graphScenario, graphDF$scenarios, graphDF$target, graphDF$trialNum)
mapply(graphScenario(), graphDF$scenarios, graphDF$target, graphDF$trialNum)
graphScenario <- function(inputDF) {
# print(statesInput)
# print(targetInput)
# print(scenarioNum)
print(inputDF[1])
print(inputDF[2])
print(inputDF[3])
# statesInput = inputDF[1]
# targetInput = inputDF[2]
# scenarioNum = inputDF[3]
#
#   # Get the correct Scenario
# scenario <- scenariosFinal %>%
#   filter(target == targetInput & states == statesInput)
#
# # Scenario 1; all continous graphs; cost = 0
# graphScenarioCont <-  scenario %>%
#   filter(scenario$commandType == "globalCont" |
#            scenario$commandType == "incCont")%>%
#   group_by(commandType, genderNoise) %>%
#   mutate(identifier = paste(commandType, ", cost: ", sizeCost, ", genderNoise: ", genderNoise, sep = "")) %>%
#   ggplot(aes(x=utterance,y=output)) +
#   geom_bar(stat="identity") +
#   facet_wrap(~identifier, ncol = 4) +
#   theme_bw() +
#   theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
#
#
# # Scenario 1; Graphs by genderNoise and sizeCost
# graphScenarioNoise08 <- scenario %>%
#   filter(scenario$genderNoise == 0.8 |
#            scenario$commandType == "globalBool" |
#            scenario$commandType == "incBool") %>%
#   mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
#   ggplot(aes(x=utterance,y=output)) +
#   geom_bar(stat="identity") +
#   facet_wrap(~identifier, ncol = 4) +
#   theme_bw() +
#   theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
#
# graphScenarioNoise1 <- scenario %>%
#   filter(scenario$genderNoise == 1.0 |
#            scenario$commandType == "globalBool" |
#            scenario$commandType == "incBool") %>%
#   mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
#   ggplot(aes(x=utterance,y=output)) +
#   geom_bar(stat="identity") +
#   facet_wrap(~identifier, ncol = 4) +
#   theme_bw() +
#   theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
#
#
# # EXPORT THE SCENARIO 1 PLOTS
#
# contModelName <- paste("stefanTestSeries1/scenario", scenarioNum, "_ContModels.jpeg", sep = "")
# graph2Name <- paste("stefanTestSeries1/scenario", scenarioNum, "_Noise08.jpeg", sep = "")
# graph3Name <-paste("stefanTestSeries1/scenario", scenarioNum, "_Noise1.jpeg", sep = "")
#
# #Export the plots
# jpeg(file=contModelName, width = 1500, height = 1000)
# plot(graphScenarioCont)
# dev.off()
#
# jpeg(file=graph2Name, width = 1500, height = 1000)
# plot(graphScenarioNoise08)
# dev.off()
#
# jpeg(file=graph3Name, width = 1500, height = 1000)
# plot(graphScenarioNoise1)
# dev.off()
}
graphDF <- data.frame(
scenarios = unique(scenariosFinal$states)
)
graphDF <- graphDF %>%
add_column(target = rep("blue_plate_masc", nrow(graphDF))) %>%
add_column(trialNum = 1:nrow(graphDF))
graphDF %>%
mutate(output = sapply(
split(graphDF, 1:nrow(graphDF)),
function(x) do.call(graphScenario(), x)
))
# # This of course doesn't work
apply(graphDF, 1, graphScenario)
graphScenario <- function(inputDF) {
# print(statesInput)
# print(targetInput)
# print(scenarioNum)
# print(inputDF[1])
# print(inputDF[2])
# print(inputDF[3])
statesInput = inputDF[1]
targetInput = inputDF[2]
scenarioNum = inputDF[3]
# Get the correct Scenario
scenario <- scenariosFinal %>%
filter(target == targetInput & states == statesInput)
# Scenario 1; all continous graphs; cost = 0
graphScenarioCont <-  scenario %>%
filter(scenario$commandType == "globalCont" |
scenario$commandType == "incCont")%>%
group_by(commandType, genderNoise) %>%
mutate(identifier = paste(commandType, ", cost: ", sizeCost, ", genderNoise: ", genderNoise, sep = "")) %>%
ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
# Scenario 1; Graphs by genderNoise and sizeCost
graphScenarioNoise08 <- scenario %>%
filter(scenario$genderNoise == 0.8 |
scenario$commandType == "globalBool" |
scenario$commandType == "incBool") %>%
mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
graphScenarioNoise1 <- scenario %>%
filter(scenario$genderNoise == 1.0 |
scenario$commandType == "globalBool" |
scenario$commandType == "incBool") %>%
mutate(identifier = paste("cost: ", sizeCost, ", ", commandType, ", genderNoise: ", genderNoise, sep = "")) %>%
ggplot(aes(x=utterance,y=output)) +
geom_bar(stat="identity") +
facet_wrap(~identifier, ncol = 4) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90), text = element_text(size = 16))
# EXPORT THE SCENARIO 1 PLOTS
contModelName <- paste("stefanTestSeries1/scenario", scenarioNum, "_ContModels.jpeg", sep = "")
graph2Name <- paste("stefanTestSeries1/scenario", scenarioNum, "_Noise08.jpeg", sep = "")
graph3Name <-paste("stefanTestSeries1/scenario", scenarioNum, "_Noise1.jpeg", sep = "")
#Export the plots
jpeg(file=contModelName, width = 1500, height = 1000)
plot(graphScenarioCont)
dev.off()
jpeg(file=graph2Name, width = 1500, height = 1000)
plot(graphScenarioNoise08)
dev.off()
jpeg(file=graph3Name, width = 1500, height = 1000)
plot(graphScenarioNoise1)
dev.off()
}
graphDF <- data.frame(
scenarios = unique(scenariosFinal$states)
)
graphDF <- graphDF %>%
add_column(target = rep("blue_plate_masc", nrow(graphDF))) %>%
add_column(trialNum = 1:nrow(graphDF))
# # This of course doesn't work
apply(graphDF, 1, graphScenario)
